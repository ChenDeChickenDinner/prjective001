//
//  NSDate_.h
//  Runtime
//
//  Created by xs on 2020/12/24.
//  Copyright © 2020 xax. All rights reserved.
//

#import <Foundation/Foundation.h>



/*
 NSDate -- 表示一个绝对的时间点
 NSTimeZone -- 时区信息
 NSLocale -- 本地化信息
 NSDateComponents -- 一个封装了具体年月日、时秒分、周、季度等的类
 NSCalendar -- 日历类，它提供了大部分的日期计算接口，并且允许您在NSDate和NSDateComponents之间转换
 NSDateFormatter -- 用来在日期和字符串之间转换

 */
/*

UTC:
1.协调世界时，又称世界统一时间、世界标准时间、国际协调时间。由于英文（CUT）和法文（TUC）的缩写不同，作为妥协
2.UTC是根据原子钟来计算时间

GMT:是指位于伦敦郊区的皇家格林尼治天文台的标准时间（开发中不常用）
1.在1972年以前，是世界时的计时基准
2.在1972年以后，是零时区，伦敦时间
3.UTC = GMT +/- 0.9 s

CST:北京时间
 
时区 TimeZone
本初子午线
1.即0度经线，亦称格林威治子午线、格林尼治子午线或本初经线，
2.是经过英国格林尼治天文台的一条经线（亦称子午线）。

日期变更线
1.随着标准时计时的区时系统的确立，东西十二区重叠，计时相同但日期不同，为避免混乱，公认180°经线作为日期变更线
2.作为地球上“今天”和“昨天”的分界线

时区划分:
1.正式的时区划分包括24个时区,东、西各12个时区,时间正好是1小时
2.每隔经度15°划分一个时区,最后的东、西第12区各跨经度7.5度
3.地球是自西向东自转，东边比西边先看到太阳，东边的时间也比西边的早
UTC-12:西十二区 (10月-1日-12:00)
UTC-6:西六区    (10月-1日-18:00)
UTC0: 零时区    (10月-2日-00:00)
UTC+1:东一区    (10月-2日-01:00)
UTC+6:东六区    (10月-2日-06:00)
UTC+8:东八区    (10月-2日-08:00)北京时间
UTC+12:东十二区  (10月-2日-12:00)
 
时差的计算公式：
UTC + 时区差 = 本地时间

ISO 8601：
国际标准ISO 8601，是国际标准化组织的日期和时间的表示方法，全称为《数据存储和交换形式·信息交换·日期和时间的表示方法》。

1.年:
年由4位数组成，以公历公元1年为0001年，以公元前1年为0000年，公元前2年为-0001年；
例如2004
月日:
月为2位数，日为2位数；
例如2004年5月3日可写成2004-05-03或20040503

2.时分秒
1.小时、分和秒都用2位数表示，对UTC时间最后加一个大写字母Z，其他时区用实际时间加时差表示
如UTC时间下午2点30分5秒表示为14:30:05Z或143005Z，
当时的北京时间表示为22:30:05+08:00或223005+0800，也可以简化成223005+08

3.日期和时间的组合表示
合并表示时，要在时间前面加一大写字母T
如要表示北京时间2004年5月3日下午5点30分8秒，可以写成2004-05-03T17:30:08+08:00或20040503T173008+08
 
4.时间戳
1.时间戳是指格林威治时间1970年01月01日00时00分00秒(北京时间1970年01月01日08时00分00秒)起至现在的总秒数
2.时间戳应该是10位，如果不巧碰到了13位的，代表着他计算了毫秒，只要删除剪切前十位就行了
 
 */
/*
 厘秒:百分之一（0.01秒）
 毫秒:千分之一（0.001秒）
 微秒:百万分之一秒
 纳秒:10亿分之一秒
 */
@interface NSDate_ : NSObject

@end



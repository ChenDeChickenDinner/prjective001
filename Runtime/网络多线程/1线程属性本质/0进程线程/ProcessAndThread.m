//
//  ProcessAndThread.m
//  2019OC2
//
//  Created by xs on 2019/3/5.
//  Copyright © 2019 Touker. All rights reserved.
//

#import "ProcessAndThread.h"

@implementation ProcessAndThread

/** 什么是进程
1.进程是一个具有独立功能的程序关于某个数据集合的一次运行活动
2.每一个进程都有它自己的地址空间，一般情况下，包括文本区域（text region）、数据区域（data region）和堆栈（stack region）
3.进程之间的内存不共享，相互独立

 */
/** 什么是线程
 1.是操作系统能够进行运算调度的最小单位。
 2.它被包含在进程之中，是进程中的实际运作单位。
 3.一条线程指的是进程中一个单一顺序的控制流，
 4.一个进程中可以并发多个线程，每条线程并行执行不同的任务
 5.同一个进制中的线程共享内存空间
 */




/**线程的生命周期
1.进程开启默认开启一条主线程，直到程序退出

2.APP项目中所有UI操作必须在主线程中执行

3.子线程需要手动创建

4.线程的生命周期以及状态
 a.线程对象创建:刚被创建出来，只能进入可运行态或者死亡态
 b.就绪状态:让入线程可调度池等待被执行
 c.运行状态:执行任务
 d.阻塞状态:在执行过程中需要等待某个事件发生，则被阻塞
 e.死亡状态:任务执行完毕，它的寄存器上下文以及堆栈内容等将被释放，不可重新被唤醒
 f.线程对象销毁:内存被回收
 */



@end

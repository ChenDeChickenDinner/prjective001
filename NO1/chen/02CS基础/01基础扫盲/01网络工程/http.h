/*
 4:《OSI参考模型，通信理论示例》




名称


 <层次结构>
 :> 该体系结构标准定义了网络互连的七层框架（物理层、数据链路层、网络层、传输层、会话层、表示层和应用层），即ISO开放系统互连参考模型,是一个概念性的框架

 <<软件层，面向信息处理>>
 1:> 应用层：<应用信息展示> <data数据> 不同的应用程序使用不同的应用协议，电子邮件协议，文件传输协议等.........
 2:> 表示层：<统一数据格式> <data数据> 为上层用户解决用户信息的语法问题。它包括数据格式交换、数据加密与解密、数据压缩与终端类型的转换,设备固有数据格式 与 网络标准数据格式的转换,
 3:> 会话层：<建立通信进程> <data数据> 为端系统的应用程序之间提供了对话控制机制，会话层管理登入和注销过程。它具体管理两个用户和进程之间的对话，只对何时建立连接，何时发送进行管理。



 <<硬件层，面向通信>>真正负责在网络上传输数据
 4:> 传输层：<TCP/UDP协议> <建立断开连接> <> <端口号><数据段> 为会话层用户提供一个端到端的数据传输服务机制，把消息分成若干个分组，并在接收端对它们进行重组。不同的分组可以通过不同的连接传送到主机，
 5:> 网络层：<IP协议>  <寻址>   <路由器> <IP地址> <分组流,数据包>; 本层通过寻址来建立两个节点之间的连接，为源端的运输层送来的分组，选择合适的路由和交换节点，正确无误地按照地址传送给目的端的运输层
 6:> 链路层：<协议> <区域通信>  <网卡> <MAC地址><帧流，数据帧>; 从物理层解决两个相邻结点之间的通信问题，传送的协议数据单元称为数据帧，数据帧中包含物理地址（又称MAC地址）、控制码、数据及校验码等信息
 7:> 物理层：<协议> <提供物理连接>  <><比特流>;    主要关心的是通过物理链路从一个节点向另一个节点传送比特流，负责比特流与电子信号之间的切换






 /**
 第1层>:物理层====》物理接口规范，传输比特流,网卡是工作在物理层的
 1.作用解释:《比特流传输》物理层为设备之间的数据通信提供传输媒体及互连设备，为数据传输提供可靠的环境
 2.所用协议:规定了电平、速度和电缆针脚
 3.关键节点:《传输介质+通信设备组成》集线器、中继器、调制解调器、网线、双绞线、同轴电缆《转换器》
 4.数据形式:《比特流》

 第2层>:数据链路层===》成帧，保证帧的无误传输，MAC地址，形成EHTHERNET帧
 1.作用解释:《帧流传输》将比特组合成字节,再将字节组合成帧,使用链路层地址 (以太网使用MAC地址)来访问介质,并进行差错检测
 2.所用协议:HDLC协议/点-点协议PPP
 3.关键节点: 网卡Mac地址、交换机、网桥《桥接器》
 4.数据形式:《帧流》

 第3层>:网络层===》IP地址，形成IP包，路由选择，流量控制（建立主机与主机的通信）
 1.作用解释:《分组流,数据包》本层通过寻址来建立两个节点之间的连接，为源端的运输层送来的分组，选择合适的路由和交换节点，正确无误地按照地址传送给目的端的运输层
 2.所用协议: IP协议、
 3.关键节点: 路由器 《网关》
 4.数据形式:《分组流,数据包packet》


 第4层>:传输层===》端口地址，（建立主机端口到端口的通信）
 1.作用解释:《分段》为会话层用户提供一个端到端的数据传输服务机制，Socket编程就是通过代码来实现传输层之间的通信
 2.所用协议: TCP协议、UDP 协议
 3.关键节点: 端口
 4.数据形式:《分段》

 第5层>:会话层===》
 1.作用解释:《数据》为端系统的应用程序之间提供了对话控制机制，会话层管理登入和注销过程。它具体管理两个用户和进程之间的对话，只对何时建立连接，何时发送进行管理。
 2.所用协议:
 3.关键节点:
 4.数据形式:《数据》

 第6层>:表示层===》使得不同操作系统之间通信成为可能。
 1.作用解释:《数据》提供各种用于应用层数据的编码和转换功能,确保一个系统的应用层发送的数据能被另一个系统的应用层识别。
 2.所用协议: 文字标准：ASCII、图像标准：JPEG、视频标准：MIDI、
 3.关键节点:
 4.数据形式:《数据》


 第7层>:应用层===》服务于各个应用软件
 1.作用解释:《数据》为操作系统或网络应用程序提供访问网络服务的接口
 2.所用协议: http协议、
 3.关键节点: 各种软件
 4.数据形式:《数据》









 第2层>:数据链路层
 1.作用解释:
 1.《比特流传输》物理层为设备之间的数据通信提供传输媒体及互连设备，为数据传输提供可靠的环境
 2.对于物理层:比特流在物理层的传输介质上传输时一定会存在误差-->采用差错检测，差错控制和流量控制等方法，将有差错的物理线路改进为无差错的数据链路;
 3.对于网络层:网络层不需要知道物理层具体采用了哪种传输介质与通信设备的，是采用模拟通信方法，还是采用数字通信方法;


 二 数据链路层的控制规程
 2.1数据链路结构
 数据链路结构可以分为两种：点-点链路和点-多点链路。
 在点-点链路中，发送信息和命令的站称为主站，接收信息和命令而发出确认信息或响应的站称为从站，兼有主、从功能可发送命令与响应的站称为复合站。
 在点-多点链路中，往往有一个站为控制站，主管数据链路的信息流，并处理链路上出现的不可恢复的差错情况，其余各站则为受控站。


 2.2 数据链路控制规程功能
 1*帧控制
 数据链路上传输的基本单位是帧。帧控制功能要求发送站把网络送来的数据信息分成若干码组，在每个码组中加入地址字段、控制字段、校验字段以及帧开始和结束标志，组成帧来发送；要求接收端从收到的帧中去掉标志字段，还原成原始数据信息后送到网络层。

 2*帧同步
 在传输过程中必须实现帧同步，以保证对帧中各个字段的正确识别。

 3*差错控制
 当数据信息在物理链路中传输出现差错，数据链路控制规程要求接收端能检测出差错并予以恢复，通常采用的方法有自动请求重发ARQ和前向纠错两种。采用ARQ方法时，为了防止帧的重收和漏收，常对帧采用编号发送和接收。当检测出无法恢复的差错时，应通知网络层做相应处理。

 4*流量控制
 流量控制用于克服链路的拥塞。它能对链路上信息流量进行调节，确保发送端发送的数据速率与接收端能够接收的数据速率相容。常用的流量控制方法是滑动窗口控制法。

 5*链路管理
 数据链路的建立、维持和终止，控制信息的传输方向，显示站的工作状态，这些都属于链路管理的范畴。

 6*透明传输
 规程中采用的标志和一些字段必须独立于要传输的信息，这就意味着数据链路能够传输各种各样的数据信息，即传输的透明性。

 7*寻址
 在多点链路中，帧必须能到达正确的接收站。

 8*异常状态恢复
 当链路发生异常情况时，如收到含义不清的序列或超时收不到响应等，能自动重新启动，恢复到正常工作状态



 5.所用协议:HDLC协议/点-点协议PPP

 1 HDLC:
 高级数据链路控制（High-Level Data Link Control或简称HDLC），是一个在同步网上传输数据、面向比特的数据链路层协议，它是由国际标准化组织(ISO)根据IBM公司的SDLC协议扩展开发而成的.
 2 HDLC的特点:
 *HDLC协议不依赖于任何一种字符编码集；
 *数据报文可透明传输，用于实现透明传输的“0比特插入法”易于硬件实现；
 *全双工通信，有较高的数据链路传输效率；
 *所有帧采用CRC检验，对信息帧进行顺序编号，可防止漏收或重份，传输可靠性高；
 *传输控制功能与处理功能分离，具有较大灵活性。
 3 HDLC的基本概念,HDLC涉及三种类型的站，即主站、从站和复合站。
 *主站:的主要功能是发送命令（包括数据信息）帧、接收响应帧，并负责对整个链路的控制系统的初启、流程的控制、差错检测或恢复等。
 *从站:的主要功能是接收由主站发来的命令帧，向主站发送响应帧，并且配合主站参与差错恢复等链路控制。
 *复合站:的主要功能是既能发送，又能接收命令帧和响应帧，并且负责整个链路的控制.



 4 HDLC帧结构
 由六个字段组成，这六个字段可以分为五中类型，即标志序列（F）、地址字段（A）、控制字段（C）、信息字段（I）、帧校验字段（FCS）。在帧结构中允许不包含信息字段I。
 1*标志序列（F）
 HDLC指定采用01111110为标志序列，称为F标志。要求所有的帧必须以F标志开始和结束。接收设备不断地搜寻F标志，以实现帧同步，从而保证接收部分对后续字段的正确识别。另外，在帧与帧的空载期间，可以连续发送F，用来作时间填充。
 2*地址字段（A）
 地址字段表示链路上站的地址。在使用不平衡方式传送数据时（采用NRM和ARM），地址字段总是写入从站的地址；在使用平衡方式时（采用ABM），地址字段总是写入应答站的地址。
 地址字段的长度一般为8bit，最多可以表示256个站的地址
 地址字段为“11111111”时：定义为全站地址，即通知所有的接收站接收有关的命令帧并按其动作
 地址字段为“00000000”时：比特为无站地址，用于测试数据链路的状态

 3*控制字段（C）
 控制字段用来表示帧类型、帧编号以及命令、响应等。从图5-11可见，由于C字段的构成不同，
 可以把HDLC帧分为三种类型：信息帧、监控帧、无编号帧，分别简称I帧(Information)、S帧(Supervisory)、U帧(Unnumbered)。
 在控制字段中，第1位是“0”为I帧，第1、2位是“10”为S帧，第1、2位是“11”为U帧，

 4*信息字段（I）
 信息字段内包含了用户的数据信息和来自上层的各种控制信息。在I帧和某些U帧中，具有该字段，它可以是任意长度的比特序列。

 5*帧校验序列字段（FCS）
 帧校验序列用于对帧进行循环冗余校验，其校验范围从地址字段的第1比特到信息字段的最后一比特的序列，并且规定为了透明传输而插入的“0”不在校验范围内

 5 HDLC 滑动窗口协议
 1.前面提到了用检错码来检测帧传输中是否发生了错误，如果发生了错误，就需要通过滑动窗口协议来解决。 滑动窗口协议分为两种类型：

 1. 单帧停止等待协议:
 发送端每次发送1帧之后，需要等待接收端返回确认帧，如果接受到ACK，表示传输成功，发送下一帧；如果接收到NAK，表示传输错误，重新发送此帧
 2. 多帧连续发送协议:
 a. 后退N帧（GBN）拉回重发方式;只要有一个帧发送失败，则当前发送的全部帧都重新发送，这样导致的问题就是会发送许多重复帧，流量控制不好
 b. 选择重发（SR）方式; 选择重发和拉回重发的区别在于，当前发送的帧中出现某个帧传输错误后，在下一次发送时只是重新发送该错误的帧




 5 HDLC操作方式方式
 1. 正常响应模式：主站可以随时向从站传输数据帧，从站只有在主站向它发送命令帧进行探询（poll），从站响应后才可以向主站发送数据帧。
 2. 异步响应模式：主站和从站可以随时相互传输数据帧；从站可以不需要等待主站发出探询就可以发送数据；主站仍负责数据链路的初始化、链路的建立、释放与差错恢复等功能




 5 HDLC通信过程
 整个数据通信一般分为3个阶段：
 数据链路建立阶段:==>用到无编号帧
 主站发送 置正常响应模式SNRM帧 向从站请求建立数据链路，如果从站同一，发送无编号确认UA帧回主站，于是建立成功

 信息帧传送阶段:==>用到信息帧和监控帧
 主站发出探询位P=1，从站才能发送信息帧，并且以终止位F=1结束。

 数据链路释放阶段:==>用到无编号帧
 主站发送无编号拆链帧，从站同一拆链，发送无标号确认帧回给主站，释放成功



网络层

























*/

//
//  BasicUse.h
//  MRC
//
//  Created by xs on 2021/3/22.
//

#import <Foundation/Foundation.h>


/*
 
 空指针
 1.空指针常量
 1.1:一个表示0值的整数常量，叫做空指针常量【 0、0L 、3 - 3以及 (void)0, 等都是空指针常量】
 1.2.至于系统选取哪种形式作为空指针常量使用，则是实现相关的【一般的 C 系统选择 (void*)0 或者 0 的居多（也有个别的选择 0L）】

 2.空指针
 2.1:如果一个 空指针常量 赋给了一个有类型的指针变量，那么这个指针就叫空指针。
 2.2:空指针不指向任何对象 与函数，其值 = 0;

 3.NUll
 C中对NULL的预定义有两个：
 　　#define NULL 0  ---->就是数值0
 　　#define NULL ((void *)0)---->指向0的指针
 1.NULL和0的值都是一样的，但是为了目的和用途及容易识别的原因，NULL用于指针和对象，0用于数值
 2.当常量0处于应该作为指针使用的上下文中时，它就作为空指针使用；在指针上下文中“值为0的整型常量表达式”在编译时转换为空指针 int * p = 0;


 野指针:
 1.C语言中的野指针指的是定义了一个指针但是没有初始化, 导致指针中存储的是垃圾值, 指向内存中的任意地址.
 2.OC中的野指：指针有值，但指向的对象已经被回收
  a.如果继续使用这个指针进行操作会造成怀内存访问，直接崩溃
  b.所以当一个指针成为野指针了，需要对这个指针进行 nil 操作，以免后续的使用造成崩溃

 僵尸对象:
 指的是内存中的对象已经被释放, 但还没有被CPU给分配出去.


 内存泄漏：
 指的是一个应该被回收的对象, 没有得到及时的回收. 这样的对象会一直存在于内存中 直到程序结束. 这样的结果会导致内存的泄漏.
 */


@interface MRCRules : NSObject

@end




@interface Car : NSObject
- (void)run;
@end

@interface Person : NSObject
{
    Car *_car;
}

- (void)setCar:(Car *)car;
- (Car *)car;

- (void)run;
@end


